(()=>{"use strict";class e{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Project",n=arguments.length>2?arguments[2]:void 0;this.title=t,this.reference=e,this.titleReference=n,this.items=[]}getTitle(){return this.title}getItems(){return this.items}getReference(){return this.reference}setTitle(e){this.title=e,this.titleReference.textContent=e}setTitleReference(e){this.titleReference=e}addItem(e){this.items.push(e)}removeItem(e){this.items.splice(this.items.indexOf(e),1)}}class t{constructor(e,t,n,i,s){this.reference=e,this.title=t,this.description=n,this.dueDate=i,this.priority=s}getTitle(){return this.title}getDescription(){return this.description}getDueDate(){return this.dueDate}getPriority(){return this.priority}getReference(){return this.reference}setTitle(e){this.title=e}setDescription(e){this.description=e}setDueDate(e){this.dueDate=e}setPriority(e){this.priority=e}setReference(e){this.reference=e}}function n(e){document.querySelector(".menu").classList.add("hidden"),e.classList.remove("hidden"),e.classList.add("shown")}function i(i){const c=new e(function(){const e=document.createElement("div"),t=document.createElement("div"),n=Object.assign(document.createElement("input"),{type:"text",value:"New Project",placeholder:"Project Title"}),i=Object.assign(document.createElement("img"),{src:"img/back-arrow.svg",alt:"back-arrow"}),s=document.createElement("button"),r=document.createElement("div"),c=document.createElement("div");return r.classList.add("container"),e.classList.add("list"),t.classList.add("title"),c.classList.add("items"),s.appendChild(i),r.appendChild(s),t.appendChild(r),t.appendChild(n),e.appendChild(t),e.appendChild(c),s.addEventListener("click",(()=>{document.querySelector(".list.shown").className="list hidden",document.querySelector(".menu.hidden").className="menu"})),e}()),l=new t(s());c.addItem(l),i.addList(c),function(e){document.querySelector("div.lists").appendChild(e.getReference())}(c),function(e,t){e.getReference().querySelector(".items").appendChild(t.getReference())}(c,l),r(c,l),c.getReference().classList.add("shown");const d=function(e){let t=document.createElement("button");return t.textContent=e.getTitle(),t.addEventListener("click",(()=>{n(e.getReference())})),document.querySelector(".titles").appendChild(t),t}(c);return c.setTitleReference(d),c.getReference()}function s(){const e=document.createElement("div");e.classList.add("item");const t=Object.assign(document.createElement("input"),{type:"text",placeholder:"New Item"});return e.appendChild(t),console.log(e),e}function r(e,t){let n=e.getReference().querySelector("div.title input");n.addEventListener("change",(()=>{e.setTitle(n.value)}));let i=t.getReference().querySelector("input");i.addEventListener("change",(()=>{t.setTitle(i.value)})),i.addEventListener("keydown",(n=>{if("Enter"===n.key&&""!==i.value){console.log("create new item has fired");let t=c();e.addItem(t),e.getReference().querySelector(".items").appendChild(t.getReference()),t.getReference().querySelector("input").focus(),r(e,t)}"Backspace"===n.key&&""===i.value&&e.getItems().length>1&&(console.log("Delete this item"),t.getReference().remove(),e.removeItem(t),console.log(e.getItems()),n.preventDefault(),e.getItems().slice(-1)[0].getReference().querySelector("input").focus())}))}function c(){return new t(s())}const l=new class{constructor(){this.lists=[]}addList(e){this.lists.push(e)}getLists(){return this.lists}};var d;i(l),d=l,document.querySelector("#add").addEventListener("click",(()=>{n(i(d))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,