(()=>{"use strict";class e{constructor(e,t,i,s,n){this.reference=e,this.title=t,this.description=i,this.dueDate=s,this.priority=n}getTitle(){return this.title}getDescription(){return this.description}getDueDate(){return this.dueDate}getPriority(){return this.priority}getReference(){return this.reference}setTitle(e){this.title=e}setDescription(e){this.description=e}setDueDate(e){this.dueDate=e}setPriority(e){this.priority=e}setReference(e){this.reference=e}}function t(){let e=document.createElement("div");e.classList.add("item");let t=Object.assign(document.createElement("input"),{type:"text",placeholder:"Type here"});return e.appendChild(t),e}function i(){return new e(t())}const s=new class{constructor(){this.lists=[]}addList(e){this.lists.push(e)}},n=new class{constructor(e,t="To-Do"){this.name=t,this.reference=e,this.items=[]}getName(){return this.name}getItems(){return this.items}getReference(){return this.reference}setName(e){this.name=e}addItem(e){this.items.push(e)}removeItem(e){this.items.splice(this.items.indexOf(e),1)}}(function(){let e=document.createElement("div");e.classList.add("list");let t=document.createElement("div");t.classList.add("title");let i=Object.assign(document.createElement("input"),{type:"text",value:"To-Do"}),s=document.createElement("div");return s.classList.add("items"),t.appendChild(i),e.appendChild(t),e.appendChild(s),e}()),r=new e(t());var c;n.addItem(r),s.addList(n),c=n,document.querySelector("div.lists").appendChild(c.getReference()),function(e,t){e.getReference().querySelector(".items").appendChild(t.getReference())}(n,r),function e(t,s){let n=t.getReference().querySelector("div.title input");console.log(n),n.addEventListener("change",(()=>{t.setName(n.value),console.log("List title has been updated"),console.log(t.getName())}));let r=s.getReference().querySelector("input");console.log(r),r.addEventListener("change",(()=>{s.setTitle(r.value),console.log("Title has been updated"),console.log(s.getTitle()),console.log(t.getItems())})),r.addEventListener("keydown",(function(n){if("Enter"===n.key&&""!==r.value){console.log("create new item has fired");let s=i();t.addItem(s),t.getReference().querySelector(".items").appendChild(s.getReference()),s.getReference().querySelector("input").focus(),e(t,s),console.log("New Item has been added")}"Backspace"===n.key&&""===r.value&&t.getItems().length>1&&(console.log("Delete this item"),s.getReference().remove(),t.removeItem(s),console.log(t.getItems()),n.preventDefault(),t.getItems().slice(-1)[0].getReference().querySelector("input").focus())}))}(n,r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,